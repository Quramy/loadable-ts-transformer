// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformer simple import should transform path into "chunk-friendly" name 1`] = `
"function __loadable_isReady__(self, props) {
  if (typeof __webpack_modules__ !== \\"undefined\\") {
    return !!__webpack_modules__[self.resolve(props)];
  }
  
  return false;
}
function __loadable_requireSync__(self, props) {
  var id = self.resolve(props);
  if (typeof __webpack_require__ !== 'undefined') {
    return __webpack_require__(id);
  }
  return eval('module.require')(id);
}
loadable({
    chunkName() {
        return \\"foo-bar\\";
    },
    isReady(props) {
        return __loadable_isReady__(this, props);
    },
    requireAsync: () => import(/* webpackChunkName: \\"foo-bar\\" */ '../foo/bar'),
    requireSync(props) {
        return __loadable_requireSync__(this, props);
    },
    resolve() {
        return require.resolveWeak ? require.resolveWeak(/* webpackChunkName: \\"foo-bar\\" */ '../foo/bar') : eval(\\"require.resolve\\")(/* webpackChunkName: \\"foo-bar\\" */ '../foo/bar');
    }
});
"
`;

exports[`transformer simple import with "webpackChunkName" comment should use it 1`] = `
"function __loadable_isReady__(self, props) {
  if (typeof __webpack_modules__ !== \\"undefined\\") {
    return !!__webpack_modules__[self.resolve(props)];
  }
  
  return false;
}
function __loadable_requireSync__(self, props) {
  var id = self.resolve(props);
  if (typeof __webpack_require__ !== 'undefined') {
    return __webpack_require__(id);
  }
  return eval('module.require')(id);
}
loadable({
    chunkName() {
        return \\"ChunkA\\";
    },
    isReady(props) {
        return __loadable_isReady__(this, props);
    },
    requireAsync: () => import(/* webpackChunkName: \\"ChunkA\\" */ './ModA'),
    requireSync(props) {
        return __loadable_requireSync__(this, props);
    },
    resolve() {
        return require.resolveWeak ? require.resolveWeak(/* webpackChunkName: \\"ChunkA\\" */ './ModA') : eval(\\"require.resolve\\")(/* webpackChunkName: \\"ChunkA\\" */ './ModA');
    }
});
"
`;

exports[`transformer simple import with "webpackChunkName" comment should use it even if comment is separated by "," 1`] = `
"function __loadable_isReady__(self, props) {
  if (typeof __webpack_modules__ !== \\"undefined\\") {
    return !!__webpack_modules__[self.resolve(props)];
  }
  
  return false;
}
function __loadable_requireSync__(self, props) {
  var id = self.resolve(props);
  if (typeof __webpack_require__ !== 'undefined') {
    return __webpack_require__(id);
  }
  return eval('module.require')(id);
}
loadable({
    chunkName() {
        return \\"ChunkA\\";
    },
    isReady(props) {
        return __loadable_isReady__(this, props);
    },
    requireAsync: () => import(/* webpackPrefetch: true, webpackChunkName: \\"ChunkA\\" */ './ModA'),
    requireSync(props) {
        return __loadable_requireSync__(this, props);
    },
    resolve() {
        return require.resolveWeak ? require.resolveWeak(/* webpackPrefetch: true, webpackChunkName: \\"ChunkA\\" */ './ModA') : eval(\\"require.resolve\\")(/* webpackPrefetch: true, webpackChunkName: \\"ChunkA\\" */ './ModA');
    }
});
"
`;
